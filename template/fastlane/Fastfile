# For fastlane basics with react-native, see
# https://github.com/osamaq/reactnative-fastlane-appcenter

# -------------Android Build & Deploy-------------#
platform :android do
  # For android, you should setup signing for release builds.
  # Currently, the default debug keystore is used. 
  desc 'Build the release APK.'
  lane :build do
    gradle(task: 'clean', project_dir: 'android/')
    gradle(task: 'assemble', build_type: 'release', project_dir: 'android/')
  end

  desc 'Upload the release APK to App Center.'
  private_lane :upload do |options|
    release_notes = options[:notes]
    appcenter_upload(
        api_token: ENV["APPCENTER_API_TOKEN"],
        owner_name: ENV["APPCENTER_OWNER_NAME"],
        app_name: ENV["APPCENTER_APP_NAME"],
        apk: "./android/app/build/outputs/apk/release/app-release.apk",
        notify_testers: ENV["NOTIFY_TESTERS"],
        destinations: ENV["DESTINATIONS"],
        release_notes: release_notes
        )
  end

  desc 'Build the release APK, then upload to App Center.'
  lane :deploy do
    build
    upload
  end
end

# -------------iOS Sign, Build & Deploy-------------#
platform :ios do
  # You need to configure singing for iOS
  # https://github.com/osamaq/reactnative-fastlane-appcenter#signing
  desc 'Fetch certificates and provisioning profiles.'
  lane :certificates do
    match(app_identifier: 'com.app.bundle')
  end
  
  desc 'Build the iOS application.'
  lane :build do
    gym(
      scheme: ENV['APP_NAME'], 
      project: './ios/' + ENV['APP_NAME'] + '.xcodeproj', 
      export_method: 'development'
    )
  end

  desc 'Upload the release IPA to App Center.'
  private_lane :upload do |options|
    release_notes = options[:notes]
    appcenter_upload(
        api_token: ENV["APPCENTER_API_TOKEN"],
        owner_name: ENV["APPCENTER_OWNER_NAME"],
        app_name: ENV["APPCENTER_APP_NAME"],
        ipa: "./" + ENV['APP_NAME'] + ".ipa",
        notify_testers: ENV["NOTIFY_TESTERS"],
        destinations: ENV["DESTINATIONS"],
        release_notes: release_notes
        )
  end

  desc 'Fetch certificats then build the release IPA and upload to App Center.'
  lane :deploy do
    certificates
    build
    upload
  end
end


# -------------Icons & Versioning-------------#
  desc 'Android: Increment versionCode and set versionName to package.json version.'
  package = load_json(json_path: "./package.json")
  private_lane :inc_ver_and do
    increment_version_code(
      gradle_file_path: "./android/app/build.gradle",
    )

    increment_version_name(
      gradle_file_path: "./android/app/build.gradle",
      version_name: package['version']
    )
  end


  desc 'iOS: Increment build number and set the version to package.json version.'
  private_lane :inc_ver_ios do
    increment_build_number(
      xcodeproj: './ios/' + ENV['APP_NAME'] + '.xcodeproj'
    )
    increment_version_number(
      xcodeproj: './ios/' + ENV['APP_NAME'] + '.xcodeproj',
      version_number: package['version']
    )
  end


  desc 'Bump build numbers, and set the display version to match the pacakage.json version.'
  lane :bump do
    inc_ver_ios
    inc_ver_and
  end


    # To prepare the original icon set, see:
  # https://developer.android.com/studio/write/image-asset-studio
  desc 'Android: Overwrite the current icon set with a badged version.'
  private_lane :make_badge_and do
    package = load_json(json_path: "./package.json")
    add_badge(
      shield: "DEV-" + package['version'] + "-orange", 
      no_badge: true,
      dark: true,
      shield_scale: "0.55",
      shield_gravity: "Center",
      shield_geometry: "+0+30%",
      glob: "/android/app/src/main/res/mipmap-*/ic_launcher*.png",
    )
  end

  # To prepare the original icon set, you can use:
  # https://appicon.co/
  desc 'iOS: Overwrite the current icon set with a badged version.'
  private_lane :make_badge_ios do
    package = load_json(json_path: "./package.json")
    add_badge(
      shield: "DEV-" + package['version'] + "-orange", 
      no_badge: true,
      dark: true,
      shield_scale: "0.85",
      shield_gravity: "South",
      shield_geometry: "+0+5%",
      glob: "/ios/" + ENV['APP_NAME'] + "/Images.xcassets/AppIcon.appiconset/*.png",
    )
  end

  desc 'Make new versioned icon badges.'
  lane :make_badge do
    make_badge_ios
    make_badge_and
  end